{"version":3,"sources":["src/constants/navigation.js","src/screens/Main.js","src/redux/actions/navigation.js","src/redux/actions/types.js","src/redux/selectors/navigation.js","src/redux/HOC/connectNavigation.js","src/redux/containers/main.js","src/constants/layout.js","src/constants/colors.js","src/components/header/DrawerTrigger.js","src/components/header/Header.js","src/screens/Events.js","src/redux/containers/events.js","src/screens/Deejays.js","src/redux/containers/deejays.js","src/screens/Contact.js","src/redux/containers/contact.js","src/screens/Legal.js","src/redux/containers/legal.js","src/navigation/Stack.js","src/navigation/Drawer.js","src/navigation/Navigator.js","src/redux/reducers/user.js","src/redux/reducers/index.js","src/redux/configureStore.js","App.js","web-build/register-service-worker.js"],"names":["screens","PlaylistItem","name","uri","isVideo","this","PLAYLIST","Dimensions","get","DEVICE_WIDTH","width","DEVICE_HEIGHT","height","VIDEO_CONTAINER_HEIGHT","FONT_SIZE","Main","props","_mountVideo","component","_video","_loadNewPlaybackInstance","_onPlaybackStatusUpdate","status","isLoaded","setState","playbackInstancePosition","positionMillis","playbackInstanceDuration","durationMillis","shouldPlay","isPlaying","isBuffering","muted","isMuted","volume","shouldCorrectPitch","didJustFinish","isLooping","_advanceIndex","_updatePlaybackInstanceForIndex","error","console","log","_onReadyForDisplay","event","naturalSize","videoWidth","videoHeight","_onPlayPausePressed","playbackInstance","state","pauseAsync","playAsync","_onStopPressed","stopAsync","_onForwardPressed","_onSeekSliderValueChange","_onMutePressed","setIsMutedAsync","value","setVolumeAsync","isSeeking","shouldPlayAtEndOfSeek","_onSeekSliderSlidingComplete","a","async","seekPosition","playFromPositionAsync","setPositionAsync","index","showVideo","playbackInstanceName","isLoading","Audio","setAudioModeAsync","staysActiveInBackground","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","shouldDuckAndroid","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DO_NOT_MIX","playing","unloadAsync","source","initialStatus","loadAsync","getStatusAsync","Sound","createAsync","sound","_updateScreenForLoading","forward","length","millis","totalSeconds","seconds","Math","floor","padWithZero","number","string","toString","_getMMSSFromMillis","View","style","styles","container","nameContainer","Text","text","videoContainer","Video","ref","video","opacity","resizeMode","RESIZE_MODE_CONTAIN","onPlaybackStatusUpdate","onError","onReadyForDisplay","useNativeControls","playbackContainer","Slider","playbackSlider","_getSeekSliderPosition","onValueChange","onSlidingComplete","disabled","timestampRow","buffering","timestamp","_getTimestamp","buttonsContainerBase","buttonsContainerTopRow","TouchableWithoutFeedback","underlayColor","wrapper","onPress","_onBackPressed","FontAwesome5","size","color","buttonsContainerMiddleRow","volumeContainer","volumeSlider","_onVolumeSliderValueChange","React","Component","StyleSheet","create","emptyContainer","alignSelf","backgroundColor","flex","flexDirection","justifyContent","alignItems","maxWidth","minHeight","fontSize","textAlign","paddingLeft","paddingRight","button","minWidth","buttonsContainerBottomRow","buttonsContainerTextRow","maxHeight","navigateTo","route","type","navigate","routeName","params","dispatch","navigationRef","current","CommonActions","goBack","reset","toggleDrawer","DrawerActions","getNavigationCurrentScreen","connectNavigation","WrappedComponent","mapDispatchToProps","connect","currentScreen","compose","scale","sizeNormalize","newSize","Platform","OS","round","PixelRatio","roundToNearestPixel","StatusBarHeight","select","ios","isPad","isTVOS","android","StatusBar","currentHeight","default","TouchableOpacity","colors","header","marginTop","navigation","Header","Button","title","MAIN","Stack","createStackNavigator","Navigator","screenOptions","headerCommonsOptions","Screen","MainScreen","options","headerOptionsMain","EVENTS","EventsScreen","DEEJAYS","DeejaysScreen","CONTACT","ContactScreen","LEGAL","LegalScreen","headerStyle","headerTintColor","headerTitleStyle","fontWeight","headerLeft","marginLeft","Drawer","createDrawerNavigator","initialRouteName","drawerContent","CustomDrawerContent","StackNavigator","DrawerContentScrollView","map","drawerItems","drawerItem","DrawerItem","key","label","NavigationContainer","initialState","token","username","password","rootReducer","combineReducers","user","action","data","persistConfig","storage","AsyncStorage","whitelist","blacklist","persistedReducer","persistReducer","store","createStore","applyMiddleware","ReduxThunk","logger","persistor","persistStore","loading","YellowBox","ignoreWarnings","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch"],"mappings":"mHAAaA,EACF,SADEA,EAED,UAFCA,EAGA,UAHAA,EAIA,WAJAA,EAKF,c,6qBCiBLC,EACJ,WAAYC,EAAMC,EAAKC,GAAU,YAC/BC,KAAKH,KAAOA,EACZG,KAAKF,IAAMA,EACXE,KAAKD,QAAUA,GAIbE,EAAW,CACf,IAAIL,EACF,kCACA,gGACA,GAEF,IAAIA,EACF,iBACA,2DACA,GAEF,IAAIA,EACF,8CACA,oHACA,GAEF,IAAIA,EACF,yBACA,8FACA,GAEF,IAAIA,EACF,4CACA,qGACA,I,EAamDM,IAAWC,IAAI,UAAvDC,E,EAAPC,MAA6BC,E,EAARC,OAMvBC,EAA0C,EAAhBF,EAAuB,EAAMG,GAExCC,E,gCACnB,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,IA+DRC,YAAc,SAAAC,GACZ,EAAKC,OAASD,EACd,EAAKE,0BAAyB,IAlEb,EAwFnBC,wBAA0B,SAAAC,GACpBA,EAAOC,UACT,EAAKC,SAAS,CACZC,yBAA0BH,EAAOI,eACjCC,yBAA0BL,EAAOM,eACjCC,WAAYP,EAAOO,WACnBC,UAAWR,EAAOQ,UAClBC,YAAaT,EAAOS,YACpBC,MAAOV,EAAOW,QACdC,OAAQZ,EAAOY,OACfC,mBAAoBb,EAAOa,qBAEzBb,EAAOc,gBAAkBd,EAAOe,YAClC,EAAKC,eAAc,GACnB,EAAKC,iCAAgC,KAGnCjB,EAAOkB,OACTC,QAAQC,IAAR,uBAAmCpB,EAAOkB,QA1G7B,EAgHnBG,mBAAqB,SAAAC,GAEhBnC,EAAemC,EAAMC,YAAYjC,OAAUgC,EAAMC,YAAYnC,MAC7CG,EACjB,EAAKW,SAAS,CACZsB,WACGjC,EAAyB+B,EAAMC,YAAYnC,MAC5CkC,EAAMC,YAAYjC,OACpBmC,YAAalC,IAGf,EAAKW,SAAS,CACZsB,WAAYrC,EACZsC,YACGtC,EAAemC,EAAMC,YAAYjC,OAAUgC,EAAMC,YAAYnC,SA9HnD,EAmJnBsC,oBAAsB,WACS,MAAzB,EAAKC,mBACH,EAAKC,MAAMpB,UACb,EAAKmB,iBAAiBE,aAEtB,EAAKF,iBAAiBG,cAxJT,EA6JnBC,eAAiB,WACc,MAAzB,EAAKJ,kBACP,EAAKA,iBAAiBK,aA/JP,EAmKnBC,kBAAoB,WACW,MAAzB,EAAKN,mBACP,EAAKX,eAAc,GACnB,EAAKC,gCAAgC,EAAKW,MAAMrB,cAtKjC,EA0KnB2B,yBAA2B,WACI,MAAzB,EAAKP,mBACP,EAAKX,eAAc,GACnB,EAAKC,gCAAgC,EAAKW,MAAMrB,cA7KjC,EAiLnB4B,eAAiB,WACc,MAAzB,EAAKR,kBACP,EAAKA,iBAAiBS,iBAAiB,EAAKR,MAAMlB,QAnLnC,EAuLnBwB,yBAA2B,SAAAG,GACI,MAAzB,EAAKV,kBACP,EAAKA,iBAAiBW,eAAeD,IAzLtB,EA6LnBH,yBAA2B,SAAAG,GACI,MAAzB,EAAKV,kBAA6B,EAAKY,YACzC,EAAKA,WAAY,EACjB,EAAKC,sBAAwB,EAAKZ,MAAMrB,WACxC,EAAKoB,iBAAiBE,eAjMP,EAqMnBY,6BAA+B,SAAMJ,GAAN,eAAAK,EAAAC,OAAA,gDACA,MAAzB,EAAKhB,mBACP,EAAKY,WAAY,EACXK,EAAeP,EAAQ,EAAKT,MAAMvB,yBACpC,EAAKmC,sBACP,EAAKb,iBAAiBkB,sBAAsBD,GAE5C,EAAKjB,iBAAiBmB,iBAAiBF,IAPd,6DAnM7B,EAAKG,MAAQ,EACb,EAAKR,WAAY,EACjB,EAAKC,uBAAwB,EAC7B,EAAKb,iBAAmB,KACxB,EAAKC,MAAQ,CACXoB,WAAW,EACXC,qBAbiB,kBAcjBvC,OAAO,EACPP,yBAA0B,KAC1BE,yBAA0B,KAC1BE,YAAY,EACZC,WAAW,EACXC,aAAa,EACbyC,WAAW,EACXrC,oBAAoB,EACpBD,OAAQ,EACRY,WAAYrC,EACZsC,YAAalC,GAnBE,E,wDAwBjB4D,IAAMC,kBAAkB,CACtBC,yBAAyB,EACzBC,oBAAqBH,IAAMI,iCAC3BC,sBAAsB,EACtBC,mBAAmB,EACnBC,wBAAyBP,IAAMQ,yC,+CAIJC,G,iFACA,MAAzB7E,KAAK4C,iB,0CACD5C,KAAK4C,iBAAiBkC,e,OAC5B9E,KAAK4C,iBAAmB,K,UAGpBmC,EAAS,CAAEjF,IAAKG,EAASD,KAAKgE,OAAOlE,KACrCkF,EAAgB,CACpBxD,WAAYqD,EACZ/C,mBAAoB9B,KAAK6C,MAAMf,mBAC/BD,OAAQ7B,KAAK6C,MAAMhB,OACnBD,QAAS5B,KAAK6C,MAAMlB,QAGlB1B,EAASD,KAAKgE,OAAOjE,Q,wBACvBqC,QAAQC,IAAIrC,KAAKgB,yB,oBACXhB,KAAKc,OAAOmE,UAAUF,EAAQC,I,eACpChF,KAAK4C,iBAAmB5C,KAAKc,O,oBACRd,KAAKc,OAAOoE,kB,kEAEDd,IAAMe,MAAMC,YAC1CL,EACAC,EACAhF,KAAKgB,0B,iBAHCqE,E,EAAAA,M,EAAOpE,OAKfjB,KAAK4C,iBAAmByC,E,QAG1BrF,KAAKsF,yBAAwB,G,6GAQPnB,GAClBA,EACFnE,KAAKmB,SAAS,CACZ8C,WAAW,EACXxC,WAAW,EACXyC,qBA/Ee,kBAgFf5C,yBAA0B,KAC1BF,yBAA0B,KAC1B+C,WAAW,IAGbnE,KAAKmB,SAAS,CACZ+C,qBAAsBjE,EAASD,KAAKgE,OAAOnE,KAC3CoE,UAAWhE,EAASD,KAAKgE,OAAOjE,QAChCoE,WAAW,M,oCAgDHoB,GACZvF,KAAKgE,OACFhE,KAAKgE,OAASuB,EAAU,EAAItF,EAASuF,OAAS,IAAMvF,EAASuF,S,sDAG5BX,G,kEACpC7E,KAAKsF,yBAAwB,GAE7BtF,KAAKmB,SAAS,CACZsB,WAAYrC,EACZsC,YAAalC,IAGfR,KAAKe,yBAAyB8D,G,6GAkE9B,OAC2B,MAAzB7E,KAAK4C,kBACkC,MAAvC5C,KAAK6C,MAAMzB,0BAC4B,MAAvCpB,KAAK6C,MAAMvB,yBAGTtB,KAAK6C,MAAMzB,yBACXpB,KAAK6C,MAAMvB,yBAGR,I,yCAGUmE,GACjB,IAAMC,EAAeD,EAAS,IACxBE,EAAUC,KAAKC,MAAMH,EAAe,IAGpCI,EAAc,SAAAC,GAClB,IAAMC,EAASD,EAAOE,WACtB,OAAIF,EAAS,GACJ,IAAMC,EAERA,GAET,OAAOF,EATSF,KAAKC,MAAMH,EAAe,KASZ,IAAMI,EAAYH,K,sCAIhD,OAC2B,MAAzB3F,KAAK4C,kBACkC,MAAvC5C,KAAK6C,MAAMzB,0BAC4B,MAAvCpB,KAAK6C,MAAMvB,yBAEDtB,KAAKkG,mBACblG,KAAK6C,MAAMzB,0BADb,MAEOpB,KAAKkG,mBAAmBlG,KAAK6C,MAAMvB,0BAErC,K,+BAIP,OACE,kBAAC6E,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAACH,EAAA,EAAD,CAAMC,MAAOC,EAAOE,eAClB,kBAACC,EAAA,EAAD,CAAMJ,MAAO,CAACC,EAAOI,OAClBzG,KAAK6C,MAAMqB,uBAGhB,kBAACiC,EAAA,EAAD,CAAMC,MAAOC,EAAOK,gBAClB,kBAACC,EAAA,EAAD,CACEC,IAAK5G,KAAKY,YACVwF,MAAO,CACLC,EAAOQ,MACP,CACEC,QAAS9G,KAAK6C,MAAMoB,UAAY,EAAM,EACtC5D,MAAOL,KAAK6C,MAAMJ,WAClBlC,OAAQP,KAAK6C,MAAMH,cAGvBqE,WAAYJ,IAAMK,oBAClBC,uBAAwBjH,KAAKgB,wBAC7BkG,QAAS,SAAC/E,GAAD,OAAWC,QAAQC,IAAIF,IAChCgF,kBAAmBnH,KAAKsC,mBACxB8E,mBAAmB,KAGvB,kBAACjB,EAAA,EAAD,CACEC,MAAO,CACLC,EAAOgB,kBACP,CACEP,QAAS9G,KAAK6C,MAAMsB,UAhST,GAgSwC,KAIvD,kBAACmD,EAAA,EAAD,CACElB,MAAOC,EAAOkB,eACdjE,MAAOtD,KAAKwH,yBACZC,cAAezH,KAAKmD,yBACpBuE,kBAAmB1H,KAAK0D,6BACxBiE,SAAU3H,KAAK6C,MAAMsB,YAEvB,kBAACgC,EAAA,EAAD,CAAMC,MAAOC,EAAOuB,cAClB,kBAACpB,EAAA,EAAD,CACEJ,MAAO,CACLC,EAAOI,KACPJ,EAAOwB,YAGR7H,KAAK6C,MAAMnB,YA/SD,kBA+SkC,IAE/C,kBAAC8E,EAAA,EAAD,CACEJ,MAAO,CACLC,EAAOI,KACPJ,EAAOyB,YAGR9H,KAAK+H,mBAIZ,kBAAC5B,EAAA,EAAD,CACEC,MAAO,CACLC,EAAO2B,qBACP3B,EAAO4B,uBACP,CACEnB,QAAS9G,KAAK6C,MAAMsB,UAnUT,GAmUwC,KAIvD,kBAAC+D,EAAA,EAAD,CACEC,cAzUa,UA0Ub/B,MAAOC,EAAO+B,QACdC,QAASrI,KAAKsI,eACdX,SAAU3H,KAAK6C,MAAMsB,WAErB,kBAACoE,EAAA,EAAD,CACE1I,KArVW,WAsVX2I,KAAM,GACNC,MAAM,WAGV,kBAACP,EAAA,EAAD,CACEC,cArVa,UAsVb/B,MAAOC,EAAO+B,QACdC,QAASrI,KAAK2C,oBACdgF,SAAU3H,KAAK6C,MAAMsB,WAErB,kBAACoE,EAAA,EAAD,CACE1I,KACEG,KAAK6C,MAAMpB,UArWD,QADD,OA0WX+G,KAAM,GACNC,MAAM,WAGV,kBAACP,EAAA,EAAD,CACEC,cArWa,UAsWb/B,MAAOC,EAAO+B,QACdC,QAASrI,KAAKgD,eACd2E,SAAU3H,KAAK6C,MAAMsB,WAErB,kBAACoE,EAAA,EAAD,CACE1I,KAnXW,OAoXX2I,KAAM,GACNC,MAAM,WAGV,kBAACP,EAAA,EAAD,CACEC,cAjXa,UAkXb/B,MAAOC,EAAO+B,QACdC,QAASrI,KAAKkD,kBACdyE,SAAU3H,KAAK6C,MAAMsB,WAErB,kBAACoE,EAAA,EAAD,CACE1I,KA9Xc,UA+Xd2I,KAAM,GACNC,MAAM,YAIZ,kBAACtC,EAAA,EAAD,CACEC,MAAO,CACLC,EAAO2B,qBACP3B,EAAOqC,4BAGT,kBAACvC,EAAA,EAAD,CAAMC,MAAOC,EAAOsC,iBAClB,kBAACT,EAAA,EAAD,CACEC,cArYW,UAsYX/B,MAAOC,EAAO+B,QACdC,QAASrI,KAAKoD,gBAEd,kBAACmF,EAAA,EAAD,CACE1I,KACEG,KAAK6C,MAAMlB,MAhZH,cACE,YAmZZ6G,KAAM,GACNC,MAAM,WAGV,kBAACnB,EAAA,EAAD,CACElB,MAAOC,EAAOuC,aACdtF,MAAO,EACPmE,cAAezH,KAAK6I,oC,GA/YAC,IAAMC,WA0ZlC1C,EAAS2C,IAAWC,OAAO,CAC/BC,eAAgB,CACdC,UAAW,UACXC,gBApaqB,WAsavB9C,UAAW,CACT+C,KAAM,EACNC,cAAe,SACfC,eAAgB,gBAChBC,WAAY,SACZL,UAAW,UACXC,gBA5aqB,WA8avBhB,QAAS,GACT7B,cAAe,CACbhG,OA9ac,IAgbhBmG,eAAgB,CACdnG,OAAQC,GAEVqG,MAAO,CACL4C,SAAUrJ,GAEZiH,kBAAmB,CACjBgC,KAAM,EACNC,cAAe,SACfC,eAAgB,gBAChBC,WAAY,SACZL,UAAW,WAEb5B,eAAgB,CACd4B,UAAW,WAEbvB,aAAc,CACZyB,KAAM,EACNC,cAAe,MACfE,WAAY,SACZD,eAAgB,gBAChBJ,UAAW,UACXO,UAtcc,IAwchBjD,KAAM,CACJkD,SAzcc,GA0cdD,UA1cc,IA4chB7B,UAAW,CACT+B,UAAW,OACXC,YAAa,IAEf/B,UAAW,CACT8B,UAAW,QACXE,aAAc,IAEhBC,OAAQ,CACNX,gBAvdqB,WAydvBpB,qBAAsB,CACpBqB,KAAM,EACNC,cAAe,MACfE,WAAY,SACZD,eAAgB,iBAElBtB,uBAAwB,CACtB+B,SAAU5J,EAAe,EACzBqJ,SAAUrJ,EAAe,GAE3BsI,0BAA2B,CACzBS,UAAW,UACXW,aAAc,IAEhBnB,gBAAiB,CACfU,KAAM,EACNC,cAAe,MACfE,WAAY,SACZD,eAAgB,gBAChBS,SAAU5J,EAAe,EACzBqJ,SAAUrJ,EAAe,GAE3BwI,aAAc,CACZvI,MAAO,QAET4J,0BAA2B,CACzBd,UAAW,UACXW,aAAc,GACdD,YAAa,IAEfK,wBAAyB,CACvBC,UAtfc,GAufdX,WAAY,SACZM,aAAc,GACdD,YAAa,GACbG,SAAU5J,EACVqJ,SAAUrJ,K,QC7jBDgK,EAAa,SAAAC,GAAK,MAAK,CAClCC,KCasB,WDZtBD,UAoBWE,EAAW,SAACC,GAAD,IAAYC,EAAZ,uDAAqB,GAArB,OAA4B,SAACC,GAAc,IAAD,EAChEA,EAASN,EAAWI,IACpB,SAAAG,GAAcC,UAAd,EAAuBF,SACrBG,gBAAcN,SAAS,CACrB1K,KAAM2K,EACNC,OAAQA,OAKDK,EAAS,kBAAM,SAACJ,GAAc,IAAD,EACxCA,EA5BmC,CACnCJ,KCS8B,qBDmB9B,SAAAK,GAAcC,UAAd,EAAuBF,SAASG,gBAAcC,YAGnCC,GAAQ,SAACP,GAAD,IAAYC,EAAZ,uDAAqB,GAArB,OAA4B,SAACC,GAAa,IAAD,EAC5DA,EA7BkC,CAClCJ,KCM4B,mBDuB5B,SAAAK,GAAcC,UAAd,EAAuBF,SACrBG,gBAAcE,MAAM,CAClBlL,KAAM2K,EACNC,OAAQA,OAKDO,GAAe,kBAAM,SAACN,GAAc,IAAD,EAC9CA,EA9ByC,CACzCJ,KCD2B,kBD+B3B,SAAAK,GAAcC,UAAd,EAAuBF,SAASO,gBAAcD,kB,UEnDnCE,G,OAA6B/K,GAAI,iBCEjCgL,GAAoB,SAAAC,GAC7B,IAIMC,EAAqB,CACvBd,WACAQ,SACAD,SACAE,iBAGJ,OAAOM,aAXiB,SAAAzI,GAAK,MAAK,CAC9B0I,cAAeL,GAA2BrI,MAY1CwI,EAFGC,CAGLF,ICHSI,eACbL,GACAG,aAZsB,SAAAzI,GACtB,MAAO,KAKkB,IAIZ2I,CAMb9K,G,8CCpBIL,GAAQH,IAAWC,IAAI,UAAUE,MACjCE,GAASL,IAAWC,IAAI,UAAUI,OAUlCkL,GAAQpL,GAAQ,IAETqL,GAAgB,SAAClD,GAC5B,IAAMmD,EAAUnD,EAAOiD,GACvB,OAAQG,KAASC,IACf,IAAK,MACH,OAAOjG,KAAKkG,MAAMC,KAAWC,oBAAoBL,IAEnD,IAAK,UACH,OAAO/F,KAAKkG,MAAMC,KAAWC,oBAAoBL,IAAY,EAE/D,IAAK,MACH,OAAO/F,KAAKkG,MAAMC,KAAWC,oBAAoBL,IAAY,MActDM,GAAkBL,KAASM,OAAO,CAC3CC,IAL2C,QAAhBP,KAASC,IAAiBD,KAASQ,OAAUR,KAASS,UANrE,MAOVhM,IANW,MAMUE,IALP,MAK8BF,IAJ7B,MAIsDE,IAI/C,GAAL,GACnB+L,QAASC,KAAUC,cACnBC,QAAS,IC1CE,GACJ,UADI,GAEF,UAFE,GAGN,UCeHpG,GAAS2C,IAAWC,OAAO,CAC7B3C,UAAW,CACPjG,MAAO,MACPE,OAAQ,OACRgJ,eAAgB,SAChBC,WAAY,YAIL2B,OApBO,SAAC,GAAD,IAAEH,EAAF,EAAEA,aAAF,OAClB,kBAAC7E,EAAA,EAAD,KACI,kBAACuG,EAAA,EAAD,CAAkBtG,MAAOC,GAAOC,UAC5B+B,QAAS,kBAAM2C,MACf,kBAAC,KAAD,CACInL,KAAM,UACN2I,KAAMkD,GAAc,IACpBjD,MAAOkE,UCRR,qBACb,kBAACxG,EAAA,EAAD,CAAMC,MAAOC,GAAOuG,QAClB,kBAAC,GAAD,QAGEvG,GAAS2C,IAAWC,OAAO,CAC/B2D,OAAQ,CACNxD,gBAAiBuD,GACjBE,UAAWZ,GACX5L,MAAO,OACPE,OAAQ,QCSN8F,GAAS2C,IAAWC,OAAO,CAC/B3C,UAAW,CACT+C,KAAM,EACND,gBAAiB,QAEnB3C,KAAM,CACJgC,MAAO,WCfI+C,eACbL,GACAG,aAZsB,SAAAzI,GACtB,MAAO,KAKkB,IAIZ2I,EDZA,gBAAGsB,EAAH,EAAGA,WAAH,OACb,gBAAC3G,EAAA,EAAD,CAAMC,MAAOC,GAAOC,WAClB,gBAACyG,GAAD,MACA,gBAACvG,EAAA,EAAD,CAAMJ,MAAOC,GAAOI,MAApB,iBAGA,gBAACuG,GAAA,EAAD,CACEC,MAAM,UACN5E,QAAS,kBAAMyE,EAAWhC,YAE5B,gBAACkC,GAAA,EAAD,CACEC,MAAM,cACN5E,QAAS,kBAAMyE,EAAW9B,kBAE5B,gBAACgC,GAAA,EAAD,CACEC,MAAM,cACN5E,QAAS,kBAAMyE,EAAWvC,SAAS,eEJnClE,GAAS2C,IAAWC,OAAO,CAC/B3C,UAAW,CACT+C,KAAM,EACND,gBAAiB,QACjBG,eAAgB,SAChBC,WAAY,UAEd/C,KAAM,CACJgC,MAAO,WCRI+C,eACbL,GACAG,aAZsB,SAAAzI,GACtB,MAAO,KAKkB,IAIZ2I,EDZA,gBAAEjB,EAAF,EAAEA,SAAF,OACb,gBAACpE,EAAA,EAAD,CAAMC,MAAOC,GAAOC,WAClB,gBAACE,EAAA,EAAD,CAAMJ,MAAOC,GAAOI,MAApB,kBAGA,gBAACuG,GAAA,EAAD,CACEC,MAAM,oBACN5E,QAAS,kBAAMkC,EAAS2C,WEKxB7G,GAAS2C,IAAWC,OAAO,CAC/B3C,UAAW,CACT+C,KAAM,EACND,gBAAiB,QACjBG,eAAgB,SAChBC,WAAY,UAEd/C,KAAM,CACJgC,MAAO,WCRI+C,eACbL,GACAG,aAZsB,SAAAzI,GACtB,MAAO,KAKkB,IAIZ2I,EDZA,gBAAEjB,EAAF,EAAEA,SAAF,OACb,gBAACpE,EAAA,EAAD,CAAMC,MAAOC,GAAOC,WAClB,gBAACE,EAAA,EAAD,CAAMJ,MAAOC,GAAOI,MAApB,kBAGA,gBAACuG,GAAA,EAAD,CACEC,MAAM,oBACN5E,QAAS,kBAAMkC,EAAS2C,WEKxB7G,GAAS2C,IAAWC,OAAO,CAC/B3C,UAAW,CACT+C,KAAM,EACND,gBAAiB,QACjBG,eAAgB,SAChBC,WAAY,UAEd/C,KAAM,CACJgC,MAAO,WCRI+C,eACbL,GACAG,aAZsB,SAAAzI,GACtB,MAAO,KAKkB,IAIZ2I,EDZA,gBAAEjB,EAAF,EAAEA,SAAF,OACb,gBAACpE,EAAA,EAAD,CAAMC,MAAOC,GAAOC,WAClB,gBAACE,EAAA,EAAD,CAAMJ,MAAOC,GAAOI,MAApB,gBAGA,gBAACuG,GAAA,EAAD,CACEC,MAAM,oBACN5E,QAAS,kBAAMkC,EAAS2C,WEExBC,GAAQC,cAEC,qBACX,gBAACD,GAAME,UAAP,CAAiBC,cAAeC,IAC5B,gBAACJ,GAAMK,OAAP,CAAc3N,KAAMqN,GAAMrM,UAAW4M,GACjCC,QAAS,gBAAGZ,EAAH,EAAGA,WAAH,OAAoBa,GAAkBb,MACnD,gBAACK,GAAMK,OAAP,CAAc3N,KAAM+N,GAAQ/M,UAAWgN,KACvC,gBAACV,GAAMK,OAAP,CAAc3N,KAAMiO,GAASjN,UAAWkN,KACxC,gBAACZ,GAAMK,OAAP,CAAc3N,KAAMmO,GAASnN,UAAWoN,KACxC,gBAACd,GAAMK,OAAP,CAAc3N,KAAMqO,GAAOrN,UAAWsN,OAGxCZ,GAAuB,CACzBa,YAAa,CACThF,gBAAiBuD,IAErB0B,gBAAiB1B,GACjB2B,iBAAkB,CACdC,WAAY,SAIdZ,GAAoB,SAACb,GAAD,MACtB,CACI0B,WAAY,kBACR,gBAACrI,EAAA,EAAD,CAAMC,MAAOC,GAAOC,WAChB,gBAACoG,EAAA,EAAD,CAAkBrE,QAAS,kBAAMyE,EAAW9B,iBACxC,gBAAC,KAAD,CACInL,KAAM,UACN2I,KAAMkD,GAAc,IACpBjD,MAAO,eAQzBpC,GAAS2C,IAAWC,OAAO,CAC7B3C,UAAW,CACPjG,MAAO,OACPE,OAAQ,OACRkO,WAAY,M,qBCjDZvB,GAA0CvN,EAApCiO,GAAoCjO,EAA5BmO,GAA4BnO,EAAnBqO,GAAmBrO,EAAVuO,GAAUvO,EAE5C+O,GAASC,cAEA,qBACX,gBAACD,GAAOrB,UAAR,CAAkBuB,iBAAkB1B,GAChC2B,cAAe,gBAAG/B,EAAH,EAAGA,WAAH,OAAoBgC,GAAoBhC,KACvD,gBAAC4B,GAAOlB,OAAR,CAAe3N,KAAMqN,GAAMrM,UAAWkO,OAGxCD,GAAsB,SAAChC,GAAD,OACxB,gBAACkC,EAAA,EAAD,KACKC,KAAIC,IAAa,SAAAC,GAAU,OACxB,gBAACC,EAAA,EAAD,KAAYC,IAAKF,EAAWG,MACxBjH,QAAS,kBAAMyE,EAAWvC,SAAS4E,EAAWG,SAC1CH,SAKdD,GAAc,CAChB,CACII,MAAOpC,IAEX,CACIoC,MAAO1B,IAEX,CACI0B,MAAOxB,IAEX,CACIwB,MAAOtB,IAEX,CACIsB,MAAOpB,KCnCAhB,GAA0CvN,EAApCiO,GAAoCjO,EAA5BmO,GAA4BnO,EAAnBqO,GAAmBrO,EAAVuO,GAAUvO,EAE5CgL,GAAgB7B,cAEd,qBACX,gBAACyG,EAAA,EAAD,CAAqB3I,IAAK+D,IACtB,gBAAC,GAAD,Q,wnBCRR,IAAM6E,GAAe,CACnBC,MAAO,KACPC,SAAU,KACVC,SAAU,KACVxN,MAAO,MCJIyN,GAAcC,YAAgB,CACzCC,KDMa,WAAmC,IAAlCjN,EAAiC,uDAAzB2M,GAAcO,EAAW,uCAE/C,OAAQA,EAAOzF,MAEb,InBRyB,gBmBSvB,OAAO,GAAP,GACKzH,EADL,CAEE4M,MAAOM,EAAON,QAGlB,InBVyB,gBmBWvB,OAAO,GAAP,GACK5M,EADL,QAEGkN,EAAOC,KAAK1F,KAAOyF,EAAOC,KAAK1M,QAIpC,InBpBuB,cmBqBrB,OAAO,GAAP,GACKT,EADL,CAEEV,MAAO4N,EAAO5N,QAGlB,InBtBmB,UmBuBjB,OAAO,GAAP,GACKU,EADL,CAEE4M,MAAO,OAGX,QACE,OAAO5M,M,+BEjCPoN,GAAgB,CAClBZ,IAAK,OACLa,QAASC,KACTC,UAAW,CACP,QAEJC,UAAW,CACP,YAIFC,GAAmBC,aAAeN,GAAeL,IAE1CY,GAAQC,YACjBH,GACAI,YAAgBC,KAAYC,OAEnBC,GAAYC,aAAaN,I,UCjBvB,sBACX,gBAAC,IAAD,CAAUA,MAAOA,IACb,gBAAC,KAAD,CAAaO,QAAS,KAAMF,UAAWA,IACnC,gBAACxD,GAAD,SAMZ2D,KAAUC,eAAe,CAAC,oB,+DCdtB,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,oCAAqC,CAAEC,MAAO,gBACvDC,MAAK,SAAUC,OAGfC,OAAM,SAAUvP,GACfC,QAAQqP,KAAK,oCAAqCtP,W","file":"static/js/app.184b8927.chunk.js","sourcesContent":["export const screens = {\n    MAIN : 'Inicio',\n    EVENTS: 'Eventos',\n    DEEJAYS: 'Deejays',\n    CONTACT: 'Contacto',\n    LEGAL: 'Aviso Legal'\n}","import React from \"react\"\nimport {\n  Dimensions,\n  Slider,\n  StyleSheet,\n  Text,\n  TouchableWithoutFeedback,\n  View,\n} from \"react-native\"\nimport { Audio, Video } from \"expo-av\"\nimport { FontAwesome5 } from \"@expo/vector-icons\"\nimport { Asset } from \"expo-asset\"\n\nclass Icon {\n  constructor(module, width, height) {\n    this.module = module\n    this.width = width\n    this.height = height\n    Asset.fromModule(this.module).downloadAsync()\n  }\n}\n\nclass PlaylistItem {\n  constructor(name, uri, isVideo) {\n    this.name = name\n    this.uri = uri\n    this.isVideo = isVideo\n  }\n}\n\nconst PLAYLIST = [\n  new PlaylistItem(\n    \"Comfort Fit - “Sorry”\",\n    \"https://s3.amazonaws.com/exp-us-standard/audio/playlist-example/Comfort_Fit_-_03_-_Sorry.mp3\",\n    false\n  ),\n  new PlaylistItem(\n    \"Big Buck Bunny\",\n    \"http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4\",\n    true\n  ),\n  new PlaylistItem(\n    \"Mildred Bailey – “All Of Me”\",\n    \"https://ia800304.us.archive.org/34/items/PaulWhitemanwithMildredBailey/PaulWhitemanwithMildredBailey-AllofMe.mp3\",\n    false\n  ),\n  new PlaylistItem(\n    \"Popeye - I don't scare\",\n    \"https://ia800501.us.archive.org/11/items/popeye_i_dont_scare/popeye_i_dont_scare_512kb.mp4\",\n    true\n  ),\n  new PlaylistItem(\n    \"Podington Bear - “Rubber Robot”\",\n    \"https://s3.amazonaws.com/exp-us-standard/audio/playlist-example/Podington_Bear_-_Rubber_Robot.mp3\",\n    false\n  )\n]\n\nconst ICON_PLAY_BUTTON = 'play'\nconst ICON_PAUSE_BUTTON = 'pause'\nconst ICON_STOP_BUTTON = 'stop'\nconst ICON_FORWARD_BUTTON = 'forward'\nconst ICON_BACK_BUTTON = 'backward'\nconst ICON_MUTED_BUTTON = 'volume-mute'\nconst ICON_UNMUTED_BUTTON = 'volume-up'\n\n\nconst { width: DEVICE_WIDTH, height: DEVICE_HEIGHT } = Dimensions.get(\"window\");\nconst BACKGROUND_COLOR = \"#FFF8ED\";\nconst DISABLED_OPACITY = 0.5;\nconst FONT_SIZE = 14;\nconst LOADING_STRING = \"... loading ...\";\nconst BUFFERING_STRING = \"...buffering...\";\nconst VIDEO_CONTAINER_HEIGHT = (DEVICE_HEIGHT * 2.0) / 5.0 - FONT_SIZE * 2;\n\nexport default class Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.index = 0;\n    this.isSeeking = false;\n    this.shouldPlayAtEndOfSeek = false;\n    this.playbackInstance = null;\n    this.state = {\n      showVideo: false,\n      playbackInstanceName: LOADING_STRING,\n      muted: false,\n      playbackInstancePosition: null,\n      playbackInstanceDuration: null,\n      shouldPlay: false,\n      isPlaying: false,\n      isBuffering: false,\n      isLoading: true,\n      shouldCorrectPitch: true,\n      volume: 1.0,\n      videoWidth: DEVICE_WIDTH,\n      videoHeight: VIDEO_CONTAINER_HEIGHT,\n    }\n  }\n\n  componentDidMount() {\n    Audio.setAudioModeAsync({\n      staysActiveInBackground: true,\n      interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n      playsInSilentModeIOS: true,\n      shouldDuckAndroid: true,\n      interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n    })\n  }\n\n  async _loadNewPlaybackInstance(playing) {\n    if (this.playbackInstance != null) {\n      await this.playbackInstance.unloadAsync()\n      this.playbackInstance = null\n    }\n\n    const source = { uri: PLAYLIST[this.index].uri };\n    const initialStatus = {\n      shouldPlay: playing,\n      shouldCorrectPitch: this.state.shouldCorrectPitch,\n      volume: this.state.volume,\n      isMuted: this.state.muted,\n    }\n\n    if (PLAYLIST[this.index].isVideo) {\n      console.log(this._onPlaybackStatusUpdate);\n      await this._video.loadAsync(source, initialStatus);\n      this.playbackInstance = this._video;\n      const status = await this._video.getStatusAsync();\n    } else {\n      const { sound, status } = await Audio.Sound.createAsync(\n        source,\n        initialStatus,\n        this._onPlaybackStatusUpdate\n      );\n      this.playbackInstance = sound;\n    }\n\n    this._updateScreenForLoading(false);\n  }\n\n  _mountVideo = component => {\n    this._video = component;\n    this._loadNewPlaybackInstance(false);\n  };\n\n  _updateScreenForLoading(isLoading) {\n    if (isLoading) {\n      this.setState({\n        showVideo: false,\n        isPlaying: false,\n        playbackInstanceName: LOADING_STRING,\n        playbackInstanceDuration: null,\n        playbackInstancePosition: null,\n        isLoading: true\n      })\n    } else {\n      this.setState({\n        playbackInstanceName: PLAYLIST[this.index].name,\n        showVideo: PLAYLIST[this.index].isVideo,\n        isLoading: false\n      })\n    }\n  }\n\n  _onPlaybackStatusUpdate = status => {\n    if (status.isLoaded) {\n      this.setState({\n        playbackInstancePosition: status.positionMillis,\n        playbackInstanceDuration: status.durationMillis,\n        shouldPlay: status.shouldPlay,\n        isPlaying: status.isPlaying,\n        isBuffering: status.isBuffering,\n        muted: status.isMuted,\n        volume: status.volume,\n        shouldCorrectPitch: status.shouldCorrectPitch\n      })\n      if (status.didJustFinish && !status.isLooping) {\n        this._advanceIndex(true);\n        this._updatePlaybackInstanceForIndex(true);\n      }\n    } else {\n      if (status.error) {\n        console.log(`FATAL PLAYER ERROR: ${status.error}`);\n      }\n    }\n  }\n\n\n  _onReadyForDisplay = event => {\n    const widestHeight =\n      (DEVICE_WIDTH * event.naturalSize.height) / event.naturalSize.width;\n    if (widestHeight > VIDEO_CONTAINER_HEIGHT) {\n      this.setState({\n        videoWidth:\n          (VIDEO_CONTAINER_HEIGHT * event.naturalSize.width) /\n          event.naturalSize.height,\n        videoHeight: VIDEO_CONTAINER_HEIGHT\n      })\n    } else {\n      this.setState({\n        videoWidth: DEVICE_WIDTH,\n        videoHeight:\n          (DEVICE_WIDTH * event.naturalSize.height) / event.naturalSize.width\n      })\n    }\n  }\n\n  _advanceIndex(forward) {\n    this.index =\n      (this.index + (forward ? 1 : PLAYLIST.length - 1)) % PLAYLIST.length;\n  }\n\n  async _updatePlaybackInstanceForIndex(playing) {\n    this._updateScreenForLoading(true);\n\n    this.setState({\n      videoWidth: DEVICE_WIDTH,\n      videoHeight: VIDEO_CONTAINER_HEIGHT\n    });\n\n    this._loadNewPlaybackInstance(playing);\n  }\n\n  _onPlayPausePressed = () => {\n    if (this.playbackInstance != null) {\n      if (this.state.isPlaying) {\n        this.playbackInstance.pauseAsync();\n      } else {\n        this.playbackInstance.playAsync();\n      }\n    }\n  }\n\n  _onStopPressed = () => {\n    if (this.playbackInstance != null) {\n      this.playbackInstance.stopAsync();\n    }\n  }\n\n  _onForwardPressed = () => {\n    if (this.playbackInstance != null) {\n      this._advanceIndex(true);\n      this._updatePlaybackInstanceForIndex(this.state.shouldPlay);\n    }\n  }\n\n  _onSeekSliderValueChange = () => {\n    if (this.playbackInstance != null) {\n      this._advanceIndex(false);\n      this._updatePlaybackInstanceForIndex(this.state.shouldPlay);\n    }\n  }\n\n  _onMutePressed = () => {\n    if (this.playbackInstance != null) {\n      this.playbackInstance.setIsMutedAsync(!this.state.muted);\n    }\n  }\n\n  _onSeekSliderValueChange = value => {\n    if (this.playbackInstance != null) {\n      this.playbackInstance.setVolumeAsync(value);\n    }\n  }\n\n  _onSeekSliderValueChange = value => {\n    if (this.playbackInstance != null && !this.isSeeking) {\n      this.isSeeking = true;\n      this.shouldPlayAtEndOfSeek = this.state.shouldPlay;\n      this.playbackInstance.pauseAsync();\n    }\n  }\n\n  _onSeekSliderSlidingComplete = async value => {\n    if (this.playbackInstance != null) {\n      this.isSeeking = false;\n      const seekPosition = value * this.state.playbackInstanceDuration;\n      if (this.shouldPlayAtEndOfSeek) {\n        this.playbackInstance.playFromPositionAsync(seekPosition);\n      } else {\n        this.playbackInstance.setPositionAsync(seekPosition);\n      }\n    }\n  }\n\n  _getSeekSliderPosition() {\n    if (\n      this.playbackInstance != null &&\n      this.state.playbackInstancePosition != null &&\n      this.state.playbackInstanceDuration != null\n    ) {\n      return (\n        this.state.playbackInstancePosition /\n        this.state.playbackInstanceDuration\n      )\n    }\n    return 0\n  }\n\n  _getMMSSFromMillis(millis) {\n    const totalSeconds = millis / 1000\n    const seconds = Math.floor(totalSeconds % 60)\n    const minutes = Math.floor(totalSeconds / 60)\n\n    const padWithZero = number => {\n      const string = number.toString()\n      if (number < 10) {\n        return \"0\" + string\n      }\n      return string;\n    }\n    return padWithZero(minutes) + \":\" + padWithZero(seconds)\n  }\n\n  _getTimestamp() {\n    if (\n      this.playbackInstance != null &&\n      this.state.playbackInstancePosition != null &&\n      this.state.playbackInstanceDuration != null\n    ) {\n      return `${this._getMMSSFromMillis(\n        this.state.playbackInstancePosition\n      )} / ${this._getMMSSFromMillis(this.state.playbackInstanceDuration)}`\n    }\n    return \"\"\n  }\n\n  render() {\n    return(\n      <View style={styles.container}>\n        <View style={styles.nameContainer}>\n          <Text style={[styles.text]}>\n            {this.state.playbackInstanceName}\n          </Text>\n        </View>\n        <View style={styles.videoContainer}>\n          <Video\n            ref={this._mountVideo}\n            style={[\n              styles.video,\n              {\n                opacity: this.state.showVideo ? 1.0 : 0.0,\n                width: this.state.videoWidth,\n                height: this.state.videoHeight\n              }\n            ]}\n            resizeMode={Video.RESIZE_MODE_CONTAIN}\n            onPlaybackStatusUpdate={this._onPlaybackStatusUpdate}\n            onError={(error) => console.log(error)}\n            onReadyForDisplay={this._onReadyForDisplay}\n            useNativeControls={true}\n          />\n        </View>\n        <View\n          style={[\n            styles.playbackContainer,\n            {\n              opacity: this.state.isLoading ? DISABLED_OPACITY : 1.0\n            }\n          ]}\n        >\n          <Slider\n            style={styles.playbackSlider}\n            value={this._getSeekSliderPosition()}\n            onValueChange={this._onSeekSliderValueChange}\n            onSlidingComplete={this._onSeekSliderSlidingComplete}\n            disabled={this.state.isLoading}\n          />\n          <View style={styles.timestampRow}>\n            <Text\n              style={[\n                styles.text,\n                styles.buffering\n              ]}\n            >\n              {this.state.isBuffering ? BUFFERING_STRING : \"\"}\n            </Text>\n            <Text\n              style={[\n                styles.text,\n                styles.timestamp\n              ]}\n            >\n              {this._getTimestamp()}\n            </Text>\n          </View>\n        </View>\n        <View\n          style={[\n            styles.buttonsContainerBase,\n            styles.buttonsContainerTopRow,\n            {\n              opacity: this.state.isLoading ? DISABLED_OPACITY : 1.0\n            }\n          ]}\n        >\n          <TouchableWithoutFeedback\n            underlayColor={BACKGROUND_COLOR}\n            style={styles.wrapper}\n            onPress={this._onBackPressed}\n            disabled={this.state.isLoading}\n          >\n            <FontAwesome5\n              name={ICON_BACK_BUTTON}\n              size={32}\n              color=\"black\"\n            />\n          </TouchableWithoutFeedback>\n          <TouchableWithoutFeedback\n            underlayColor={BACKGROUND_COLOR}\n            style={styles.wrapper}\n            onPress={this._onPlayPausePressed}\n            disabled={this.state.isLoading}\n          >\n            <FontAwesome5\n              name={\n                this.state.isPlaying\n                  ? ICON_PAUSE_BUTTON\n                  : ICON_PLAY_BUTTON\n              }\n              size={32}\n              color=\"black\"\n            />\n          </TouchableWithoutFeedback>\n          <TouchableWithoutFeedback\n            underlayColor={BACKGROUND_COLOR}\n            style={styles.wrapper}\n            onPress={this._onStopPressed}\n            disabled={this.state.isLoading}\n          >\n            <FontAwesome5\n              name={ICON_STOP_BUTTON}\n              size={32}\n              color=\"black\"\n            />\n          </TouchableWithoutFeedback>\n          <TouchableWithoutFeedback\n            underlayColor={BACKGROUND_COLOR}\n            style={styles.wrapper}\n            onPress={this._onForwardPressed}\n            disabled={this.state.isLoading}\n          >\n            <FontAwesome5\n              name={ICON_FORWARD_BUTTON}\n              size={32}\n              color=\"black\"\n            />\n          </TouchableWithoutFeedback>\n        </View>\n        <View\n          style={[\n            styles.buttonsContainerBase,\n            styles.buttonsContainerMiddleRow\n          ]}\n        >\n          <View style={styles.volumeContainer}>\n            <TouchableWithoutFeedback\n              underlayColor={BACKGROUND_COLOR}\n              style={styles.wrapper}\n              onPress={this._onMutePressed}\n            >\n              <FontAwesome5\n                name={\n                  this.state.muted\n                    ? ICON_MUTED_BUTTON\n                    : ICON_UNMUTED_BUTTON\n                }\n                size={32}\n                color=\"black\"\n              />\n            </TouchableWithoutFeedback>\n            <Slider\n              style={styles.volumeSlider}\n              value={1}\n              onValueChange={this._onVolumeSliderValueChange}\n            />\n          </View>\n        </View>\n        \n      </View>\n    ) \n  }\n\n}\n\nconst styles = StyleSheet.create({\n  emptyContainer: {\n    alignSelf: \"stretch\",\n    backgroundColor: BACKGROUND_COLOR\n  },\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    backgroundColor: BACKGROUND_COLOR\n  },\n  wrapper: {},\n  nameContainer: {\n    height: FONT_SIZE\n  },\n  videoContainer: {\n    height: VIDEO_CONTAINER_HEIGHT\n  },\n  video: {\n    maxWidth: DEVICE_WIDTH\n  },\n  playbackContainer: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n  },\n  playbackSlider: {\n    alignSelf: \"stretch\"\n  },\n  timestampRow: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    alignSelf: \"stretch\",\n    minHeight: FONT_SIZE\n  },\n  text: {\n    fontSize: FONT_SIZE,\n    minHeight: FONT_SIZE\n  },\n  buffering: {\n    textAlign: \"left\",\n    paddingLeft: 20\n  },\n  timestamp: {\n    textAlign: \"right\",\n    paddingRight: 20\n  },\n  button: {\n    backgroundColor: BACKGROUND_COLOR\n  },\n  buttonsContainerBase: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  buttonsContainerTopRow: {\n    minWidth: DEVICE_WIDTH / 2.0,\n    maxWidth: DEVICE_WIDTH / 2.0\n  },\n  buttonsContainerMiddleRow: {\n    alignSelf: \"stretch\",\n    paddingRight: 20\n  },\n  volumeContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    minWidth: DEVICE_WIDTH / 2.0,\n    maxWidth: DEVICE_WIDTH / 2.0\n  },\n  volumeSlider: {\n    width: '100%'\n  },\n  buttonsContainerBottomRow: {\n    alignSelf: \"stretch\",\n    paddingRight: 20,\n    paddingLeft: 20\n  },\n  buttonsContainerTextRow: {\n    maxHeight: FONT_SIZE,\n    alignItems: \"center\",\n    paddingRight: 20,\n    paddingLeft: 20,\n    minWidth: DEVICE_WIDTH,\n    maxWidth: DEVICE_WIDTH\n  }\n})\n\n\n","import { CommonActions, DrawerActions, TabActions } from '@react-navigation/native'\nimport { NAVIGATE, GO_BACK_NAVIGATE, RESET_NAVIGATE, TAB_NAVIGATE, TOGGLE_DRAWER } from './types'\nimport { navigationRef } from '../../navigation/Navigator'\n\nexport const navigateTo = route => ({\n  type: NAVIGATE,\n  route\n})\n\nexport const goBackNavigate = () => ({\n  type: GO_BACK_NAVIGATE\n})\n\nexport const resetNavigate = () => ({\n  type: RESET_NAVIGATE\n})\n\nexport const tabNavigate = (tab) => ({\n  type: TAB_NAVIGATE,\n  tab\n})\n\nexport const toggleDrawerNavigate = () => ({\n  type: TOGGLE_DRAWER\n})\n\nexport const navigate = (routeName, params = {}) => (dispatch) => {\n  dispatch(navigateTo(routeName))\n  navigationRef.current?.dispatch(\n    CommonActions.navigate({\n      name: routeName,\n      params: params\n    })\n  )\n}\n  \nexport const goBack = () => (dispatch) => {\n  dispatch(goBackNavigate())\n  navigationRef.current?.dispatch(CommonActions.goBack())\n}\n\nexport const reset = (routeName, params = {}) => (dispatch) =>{\n  dispatch(resetNavigate())\n  navigationRef.current?.dispatch(\n    CommonActions.reset({\n      name: routeName,\n      params: params\n    })\n  )\n}\n  \nexport const toggleDrawer = () => (dispatch) => {\n  dispatch(toggleDrawerNavigate())\n  navigationRef.current?.dispatch(DrawerActions.toggleDrawer())\n}\n\nexport const navigateInTabs = (tabName) => (dispatch) =>\n  navigationRef.current?.dispatch(\n    TabActions.jumpTo(\n      tabName, params\n    )\n  )\n","/*Fetch custom general*/\nexport const REQUEST_START = 'REQUEST_START'\nexport const REQUEST_END = 'REQUEST_END'\n\n\n/*Actions login*/\nexport const SUCCESS_LOGIN = 'SUCCESS_LOGIN'\nexport const ERROR_LOGIN = 'ERROR_LOGIN'\n\n/*Actions user*/\nexport const SET_DATA_USER = 'SET_DATA_USER'\nexport const LOG_OUT = 'LOG_OUT'\n\n/*Actions locale*/\nexport const SET_LOCALE = 'SET_LOCALE'\nexport const SET_LANG = 'SET_LANG'\n\n/*Navigation actions*/\nexport const NAVIGATE = 'NAVIGATE'\nexport const GO_BACK_NAVIGATE = 'GO_BACK_NAVIGATE'\nexport const RESET_NAVIGATE = 'RESET_NAVIGATE'\nexport const TAB_NAVIGATE = 'TAB_NAVIGATE'\nexport const TOGGLE_DRAWER = 'TOGGLE_DRAWER'","import get from 'lodash/fp/get'\n\nexport const getNavigationCurrentScreen = get('currentScreen')","import { connect } from 'react-redux'\nimport { navigate, goBack, reset, toggleDrawer } from '../actions/navigation'\nimport { getNavigationCurrentScreen } from '../selectors/navigation.js'\n\nexport const connectNavigation = WrappedComponent => {\n    const mapStateToProps = state => ({\n        currentScreen: getNavigationCurrentScreen(state)\n    })\n\n    const mapDispatchToProps = {\n        navigate,\n        reset,\n        goBack,\n        toggleDrawer,\n    }\n\n    return connect(\n        mapStateToProps, \n        mapDispatchToProps\n    )(WrappedComponent)\n}","import { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport Main from '../../screens/Main'\nimport { connectNavigation } from \"../HOC/connectNavigation\"\n\n\nconst mapStateToProps = state => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default compose(\n  connectNavigation,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Main)","import { Dimensions, Platform, PixelRatio, StatusBar } from 'react-native'\n\nconst width = Dimensions.get('window').width\nconst height = Dimensions.get('window').height\n\nexport default {\n  window: {\n    width,\n    height,\n  },\n  isSmallDevice: width < 375,\n}\n\nconst scale = width / 320\n\nexport const sizeNormalize = (size) => {\n  const newSize = size * scale\n  switch (Platform.OS) {\n    case 'ios':\n      return Math.round(PixelRatio.roundToNearestPixel(newSize))\n  \n    case 'android':\n      return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2\n  \n    case 'web':\n      return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 100\n  }\n}\n\nconst X_WIDTH = 375;\nconst X_HEIGHT = 812;\nconst XSMAX_WIDTH = 414;\nconst XSMAX_HEIGHT = 896;\n\n\nexport const isIPhoneX = () => Platform.OS === 'ios' && !Platform.isPad && !Platform.isTVOS\n    ? width === X_WIDTH && height === X_HEIGHT || width === XSMAX_WIDTH && height === XSMAX_HEIGHT\n    : false;\n\nexport const StatusBarHeight = Platform.select({\n    ios: isIPhoneX() ? 44 : 20,\n    android: StatusBar.currentHeight,\n    default: 0\n})","export default {\n  primary: '#CD5C5C',\n  secondary: '#E9967A',\n  third: '#000080',\n  tintColor: '#2f95dc',\n  tabIconDefault: '#ccc',\n  tabIconSelected: '#2f95dc',\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: '#2f95dc',\n  noticeText: '#fff',\n};\n","import React from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport Icon from 'react-native-vector-icons/Ionicons'\nimport { sizeNormalize } from '../../constants/layout'\nimport colors from '../../constants/colors'\nimport { connectNavigation } from '../../redux/HOC/connectNavigation'\n\nconst DrawerTrigger = ({toggleDrawer}) =>\n    <View>\n        <TouchableOpacity style={styles.container}\n            onPress={() => toggleDrawer()}>\n            <Icon\n                name={'md-menu'}\n                size={sizeNormalize(27)}\n                color={colors.third} />\n        </TouchableOpacity>\n    </View>\n\nconst styles = StyleSheet.create({\n    container: {\n        width: '12%',\n        height: '100%',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n})\n\nexport default connectNavigation(DrawerTrigger)\n\n","import React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport DrawerTrigger from './DrawerTrigger'\nimport colors from '../../constants/colors'\nimport { StatusBarHeight } from '../../constants/layout'\n\nexport default () =>\n  <View style={styles.header}>\n    <DrawerTrigger />\n  </View>\n\nconst styles = StyleSheet.create({\n  header: {\n    backgroundColor: colors.primary,\n    marginTop: StatusBarHeight,\n    width: '100%',\n    height: '8%'\n  }\n})\n","import * as React from 'react'\nimport { StyleSheet, View, Text, Button } from 'react-native'\nimport Header from '../components/header/Header'\n\nexport default ({ navigation }) =>\n  <View style={styles.container}>\n    <Header />\n    <Text style={styles.text}>\n      EVENTS SCREEN\n  </Text>\n    <Button\n      title=\"Go back\"\n      onPress={() => navigation.goBack()}\n    />\n    <Button\n      title=\"Open Drawer\"\n      onPress={() => navigation.toggleDrawer()}\n    />\n    <Button\n      title=\"Jump to Map\"\n      onPress={() => navigation.navigate('CHAT')}\n    />\n  </View>\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#111',\n  },\n  text: {\n    color: 'white'\n  }\n})\n\n","import { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport Events from '../../screens/Events'\nimport { connectNavigation } from \"../HOC/connectNavigation\"\n\n\nconst mapStateToProps = state => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default compose(\n  connectNavigation,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Events)","import * as React from 'react'\nimport { StyleSheet, View, Text, Button } from 'react-native'\nimport { MAIN } from '../navigation/Navigator'\n\nexport default ({navigate}) =>\n  <View style={styles.container}>\n    <Text style={styles.text}>\n      DEEJAYS SCREEN\n  </Text>\n    <Button\n      title=\"Go to main screen\"\n      onPress={() => navigate(MAIN)}\n    />\n  </View>\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    color: 'black'\n  }\n})\n","import { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport Deejays from '../../screens/Deejays'\nimport { connectNavigation } from \"../HOC/connectNavigation\"\n\n\nconst mapStateToProps = state => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default compose(\n  connectNavigation,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Deejays)","import * as React from 'react'\nimport { StyleSheet, View, Text, Button } from 'react-native'\nimport { MAIN } from '../navigation/Navigator'\n\nexport default ({navigate}) =>\n  <View style={styles.container}>\n    <Text style={styles.text}>\n      CONTACT SCREEN\n  </Text>\n    <Button\n      title=\"Go to main screen\"\n      onPress={() => navigate(MAIN)}\n    />\n  </View>\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    color: 'black'\n  }\n})\n","import { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport Contact from '../../screens/Contact'\nimport { connectNavigation } from \"../HOC/connectNavigation\"\n\n\nconst mapStateToProps = state => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default compose(\n  connectNavigation,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Contact)","import * as React from 'react'\nimport { StyleSheet, View, Text, Button } from 'react-native'\nimport { MAIN } from '../navigation/Navigator'\n\nexport default ({navigate}) =>\n  <View style={styles.container}>\n    <Text style={styles.text}>\n      LEGAL SCREEN\n  </Text>\n    <Button\n      title=\"Go to main screen\"\n      onPress={() => navigate(MAIN)}\n    />\n  </View>\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    color: 'black'\n  }\n})\n","import { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport Legal from '../../screens/Legal'\nimport { connectNavigation } from \"../HOC/connectNavigation\"\n\n\nconst mapStateToProps = state => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nexport default compose(\n  connectNavigation,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(Legal)","import * as React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport MainScreen from '../redux/containers/main'\nimport EventsScreen from '../redux/containers/events'\nimport DeejaysScreen from '../redux/containers/deejays'\nimport ContactScreen from '../redux/containers/contact'\nimport LegalScreen from '../redux/containers/legal'\nimport { MAIN, EVENTS, DEEJAYS, CONTACT, LEGAL } from './Navigator'\nimport colors from '../constants/colors'\nimport { sizeNormalize } from '../constants/layout'\nimport Icon from 'react-native-vector-icons/Ionicons'\n\nconst Stack = createStackNavigator()\n\nexport default () =>\n    <Stack.Navigator screenOptions={headerCommonsOptions}>\n        <Stack.Screen name={MAIN} component={MainScreen}\n            options={({ navigation }) => headerOptionsMain(navigation)}/>\n        <Stack.Screen name={EVENTS} component={EventsScreen} />\n        <Stack.Screen name={DEEJAYS} component={DeejaysScreen} />\n        <Stack.Screen name={CONTACT} component={ContactScreen} />\n        <Stack.Screen name={LEGAL} component={LegalScreen} />\n    </Stack.Navigator>\n\nconst headerCommonsOptions = {\n    headerStyle: {\n        backgroundColor: colors.primary,\n    },\n    headerTintColor: colors.secondary,\n    headerTitleStyle: {\n        fontWeight: 'bold',\n    },\n}\n\nconst headerOptionsMain = (navigation) => (\n    {\n        headerLeft: () => (\n            <View style={styles.container}>\n                <TouchableOpacity onPress={() => navigation.toggleDrawer()}>\n                    <Icon\n                        name={'md-menu'}\n                        size={sizeNormalize(27)}\n                        color={'black'} />\n                </TouchableOpacity>\n            </View>\n        ),\n    }\n)\n\n\nconst styles = StyleSheet.create({\n    container: {\n        width: '100%',\n        height: '100%',\n        marginLeft: 10\n    }\n})","import * as React from 'react'\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItem } from '@react-navigation/drawer'\nimport StackNavigator from './Stack'\nimport { screens } from '../constants/navigation'\nimport map from 'lodash/map'\n\nconst { MAIN, EVENTS, DEEJAYS, CONTACT, LEGAL } = screens\n\nconst Drawer = createDrawerNavigator()\n\nexport default () =>\n    <Drawer.Navigator initialRouteName={MAIN}\n        drawerContent={({ navigation }) => CustomDrawerContent(navigation)}>\n        <Drawer.Screen name={MAIN} component={StackNavigator} />\n    </Drawer.Navigator>\n\nconst CustomDrawerContent = (navigation) =>\n    <DrawerContentScrollView >\n        {map(drawerItems, drawerItem =>\n            <DrawerItem key={drawerItem.label}\n                onPress={() => navigation.navigate(drawerItem.label)}\n                {...drawerItem} />\n        )}\n    </DrawerContentScrollView>\n\n\nconst drawerItems = [\n    {\n        label: MAIN,\n    },\n    {\n        label: EVENTS,\n    },\n    {\n        label: DEEJAYS,\n    },\n    {\n        label: CONTACT,\n    },\n    {\n        label: LEGAL,\n    }\n]\n","import * as React from 'react'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { screens } from '../constants/navigation'\nimport DrawerNavigator from './Drawer'\n\nexport const { MAIN, EVENTS, DEEJAYS, CONTACT, LEGAL } = screens\n\nexport const navigationRef = React.createRef()\n\nexport default () =>\n    <NavigationContainer ref={navigationRef}>\n        <DrawerNavigator/>\n    </NavigationContainer>\n\n","\nimport { SUCCESS_LOGIN, SET_DATA_USER, ERROR_LOGIN, LOG_OUT } from '../actions/types'\n\nconst initialState = {\n  token: null,\n  username: null,\n  password: null,\n  error: null,\n}\n\nexport default (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case SUCCESS_LOGIN:\n      return {\n        ...state,\n        token: action.token\n      }\n\n    case SET_DATA_USER:\n      return {\n        ...state,\n        [action.data.type]: action.data.value\n      }\n\n\n    case ERROR_LOGIN:\n      return {\n        ...state,\n        error: action.error\n      }\n\n    case LOG_OUT:\n      return {\n        ...state,\n        token: null\n      }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport user from './user'\n\nexport const rootReducer = combineReducers({\n  user\n})\n","import { AsyncStorage } from 'react-native'\nimport { createStore, applyMiddleware } from \"redux\"\nimport { persistStore, persistReducer } from \"redux-persist\"\nimport { rootReducer } from './reducers'\nimport logger from 'redux-logger'\nimport ReduxThunk from 'redux-thunk'\n\nconst persistConfig = {\n    key: \"root\",\n    storage: AsyncStorage,\n    whitelist: [\n        'user'\n    ],\n    blacklist: [\n        'request'\n    ],\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(\n    persistedReducer,\n    applyMiddleware(ReduxThunk, logger))\n\nexport const persistor = persistStore(store)","import * as React from 'react'\nimport Navigator from './src/navigation/Navigator'\nimport { YellowBox } from \"react-native\"\nimport { Provider } from 'react-redux'\nimport { store, persistor } from './src/redux/configureStore'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nexport default () =>\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <Navigator />\n        </PersistGate>\n    </Provider>\n\n\n// ignore specific yellowbox warnings\nYellowBox.ignoreWarnings([\"Require cycle:\"])\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/citrikafm/expo-service-worker.js', { scope: '/citrikafm/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}